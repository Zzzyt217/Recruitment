server:
  port: 9000

spring:
  application:
    name: gateway-service
  thymeleaf:
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    mode: HTML
    encoding: UTF-8
    web:
      resources:
        static-locations: classpath:/static/

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-connections: 1000
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
            - name: Retry
              args:
                retries: 1
                series:
                  - SERVER_ERROR
                methods:
                  - GET
                  - POST
                exceptions:
                  - java.net.ConnectException
                  - org.springframework.web.client.HttpServerErrorException
                  - java.net.SocketTimeoutException
            - name: CircuitBreaker
              args:
                name: authService
                fallbackUri: forward:/fallback/auth

        - id: jobseeker-service
          uri: lb://jobseeker-service
          predicates:
            - Path=/jobseeker/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: jobseekerService
#                fallbackUri: forward:/fallback/jobseeker
#                statusCodes:
#                  - 500
#                  - 503
#                  - 504

        - id: resume-service
          uri: lb://resume-service
          predicates:
            - Path=/resume/**
          filters:
            - StripPrefix=1

        - id: analytics-service
          uri: lb://analytics-service
          predicates:
            - Path=/analytics/**
          filters:
            - StripPrefix=1

        - id: api-analytics-service
          uri: lb://analytics-service
          predicates:
            - Path=/api/analytics/**
          filters:
            - name: Retry
              args:
                retries: 3
                series:
                  - SERVER_ERROR
                methods:
                  - GET
                exceptions:
                  - java.net.ConnectException
                  - org.springframework.web.client.HttpServerErrorException
                  - java.net.SocketTimeoutException
            - name: CircuitBreaker
              args:
                name: analyticsService

        - id: company-service
          uri: lb://company-service
          predicates:
            - Path=/company/**
          filters:
            - StripPrefix=1
            - name: Retry
              args:
                retries: 1
                series:
                  - SERVER_ERROR
                methods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                exceptions:
                  - java.net.ConnectException
                  - org.springframework.web.client.HttpServerErrorException
                  - java.net.SocketTimeoutException
            - name: CircuitBreaker
              args:
                name: companyService
                fallbackUri: forward:/fallback/company
            - AddRequestHeader=X-Forwarded-Prefix, /company
            - PreserveHostHeader


        - id: default-redirect
          uri: lb://auth-service
          predicates:
            - Path=/**
          filters:
            - RedirectTo=302, /auth/info

    loadbalancer:
      retry:
        enabled: true
        retryOnAllOperations: true
        maxRetriesOnSameServiceInstance: 1
        maxRetriesOnNextServiceInstance: 1
        backoff:
          enabled: true
          minBackoff: 100ms
          maxBackoff: 500ms
          jitter: 0.1
      cache:
        ttl: 1s
      health-check:
        refetch-instances-interval: 1s
        repeat-health-check: true
        interval: 1s

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 3000
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      authService:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 2s

eureka:
  instance:
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 2
  client:
    registry-fetch-interval-seconds: 1
    serviceUrl:
      defaultZone: http://localhost:7001/eureka/

jwt:
  secret: your-strong-secret-key-here

MyJwt:
  SECRET_KEY: yourSecretKey


